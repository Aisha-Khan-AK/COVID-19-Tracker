{"version":3,"sources":["Components/Card/Card.module.css","Components/Card/CardData.jsx","api/index.js","Components/Chart/Chart.jsx","Components/CountryPicker/CountryPicker.jsx","Components/Footer.js","Components/Header.js","App.js","index.js","App.module.css","Components/Chart/Chart.module.css","Components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","CardData","data","confirmed","recovered","deaths","lastUpdate","className","style","container","Grid","spacing","marginBottom","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","console","log","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Copyright","Link","href","getFullYear","useStyles","makeStyles","theme","root","flexDirection","minHeight","width","textAlign","footer","padding","marginTop","Footer","classes","Container","maxWidth","Header","header","src","alt","height","App","props","setState","state","fetchedData","this","img","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.885e2c42.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__236a_\",\"card\":\"Card_card__1Va8X\",\"infected\":\"Card_infected__1O7Lv\",\"recovered\":\"Card_recovered__3tB-Y\",\"deaths\":\"Card_deaths__vaOBP\"};","import React from \"react\";\r\nimport style from \"./Card.module.css\";\r\nimport { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\nconst CardData = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return `...Loading`;\r\n  }\r\n  return (\r\n    <div className={style.container}>\r\n      <Grid container spacing={5} marginBottom=\"4\" justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(style.card, style.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">Number Of Active Cases</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        {/* ==== */}\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(style.card, style.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recoverd\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">Number Of Active Cases</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        {/* === */}\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(style.card, style.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">Number Of Active Cases</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default CardData;\r\n","import axios from \"axios\";\r\n\r\nconst url = \" https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport style from \"./Chart.module.css\";\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0 ,0, 0.5,)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [`Infected`, `Recovered`, `Deaths`],\r\n        datasets: [\r\n          {\r\n            label: `People`,\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \" rgba(0, 225, 0, 0.5)\",\r\n              \" rgba(225, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n  return (\r\n    <div className={style.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport style from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={style.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleCountryChange(e.target.value)}\r\n      >\r\n        <option value=\"global\">Global</option>\r\n        {fetchedCountries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {\" \"}\r\n            {country}{\" \"}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        COVID-19 Tracker\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minHeight: \"20vh\",\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n  },\r\n  //   main: {\r\n  //     marginTop: theme.spacing(8),\r\n  //     marginBottom: theme.spacing(2),\r\n  //   },\r\n  footer: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default function Footer() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <footer className={classes.footer}>\r\n        <Container maxWidth=\"lg\">\r\n          <Typography variant=\"body1\">\r\n            Track Your Country's cases Here. Stay Home Stay safe\r\n          </Typography>\r\n          <Copyright />\r\n        </Container>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport style from \"../App.module.css\";\r\nexport default function Header() {\r\n  return (\r\n    <div className={style.header}>\r\n      <img src=\"Images/header.jpg\" alt=\"COVID-19\" width=\"100%\" height=\"600px\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport { CardData, Chart, CountryPicker } from \"./Components\";\nimport style from \"./App.module.css\";\nimport { fetchData } from \"./api\";\nimport Footer from \"./Components/Footer\";\nimport Header from \"./Components/Header\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      country: \"\",\n    };\n  }\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n\n    this.setState({ data: fetchedData });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n    // console.log(data);\n    this.setState({ data, country: country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={style.container}>\n        <Header />\n        <img src=\"Images/image.png\" className={style.img} alt=\"COVID-19\" />\n        <CardData data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2iMYE\",\"header\":\"App_header__1UZUn\",\"img\":\"App_img__1w-Ru\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2Ekyh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3Izeq\"};"],"sourceRoot":""}